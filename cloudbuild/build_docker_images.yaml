steps:
  - name: "gcr.io/cloud-builders/gcloud"
    id: "pull bucket data"
    waitFor: ["-"]
    args: ["storage", "rsync", "-r", "gs://data_bucket_lmu/data/", "data"]

  - name: "gcr.io/cloud-builders/docker"
    id: "Build hatespeech-base image"
    waitFor: ["-"]
    args:
      [
        "build",
        ".",
        "-t",
        "hatespeech-base",
        "-f",
        "dockerfiles/hatespeech_base.dockerfile",
      ]

  - name: "gcr.io/cloud-builders/docker"
    id: "Build train container image"
    waitFor: ["Build hatespeech-base image"]
    args:
      [
        "build",
        ".",
        "-t",
        "europe-west3-docker.pkg.dev/$PROJECT_ID/hatespeech-detection-docker-repo/train-model",
        "-f",
        "dockerfiles/train_model.dockerfile",
      ]

  - name: "alpine"
    id: "Replace values in the training config"
    entrypoint: "sh"
    args:
      - "-c"
      - |
        apk add --no-cache gettext
        envsubst < cloudbuild/config_gpu.yaml > config.yaml.tmp
        mv config.yaml.tmp cloudbuild/config_gpu.yaml
    secretEnv: ["WANDB_API_KEY"]
  - name: "alpine"
    id: "Show config"
    waitFor: ["Replace values in the training config"]
    entrypoint: "sh"
    args:
      - "-c"
      - |
        cat cloudbuild/config_gpu.yaml

  - name: "gcr.io/cloud-builders/docker"
    id: "Push train container image"
    waitFor: ["Build train container image"]
    args:
      [
        "push",
        "europe-west3-docker.pkg.dev/$PROJECT_ID/hatespeech-detection-docker-repo/train-model:latest",
      ]

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Train on vertex AI"
    waitFor:
      ["Replace values in the training config", "Push train container image"]
    args:
      [
        "ai",
        "custom-jobs",
        "create",
        "--region",
        "europe-west1",
        "--display-name",
        "train hatespeech model",
        "--config",
        "cloudbuild/config_gpu.yaml",
      ]

  - name: "gcr.io/cloud-builders/gcloud"
    id: "pull bucket modelweights"
    waitFor: ["Train on vertex AI"]
    args:
      [
        "storage",
        "cp",
        "gs://data_bucket_lmu/mlops_project/models/saved_models/bsc_weights.pth",
        "mlops_project/models/saved_models/bsc_weights.pth",
      ]
  - name: "gcr.io/cloud-builders/docker"
    id: "Build inference api container image"
    waitFor: ["Build hatespeech-base image", "pull bucket modelweights"]
    args:
      [
        "build",
        ".",
        "-t",
        "europe-west3-docker.pkg.dev/$PROJECT_ID/hatespeech-detection-docker-repo/inference-api",
        "-f",
        "dockerfiles/inference_api.dockerfile",
      ]
  - name: "gcr.io/cloud-builders/docker"
    id: "Build predict container image"
    waitFor:
      [
        "Build hatespeech-base image",
        "pull bucket modelweights",
        "pull bucket data",
      ]
    args:
      [
        "build",
        ".",
        "-t",
        "europe-west3-docker.pkg.dev/$PROJECT_ID/hatespeech-detection-docker-repo/predict-model",
        "-f",
        "dockerfiles/predict_model.dockerfile",
      ]

  - name: "gcr.io/cloud-builders/gcloud"
    id: "Deploy inference api docker container to Cloud Run"
    waitFor: ["Build inference api container image"]
    args:
      [
        "run",
        "deploy",
        "hate-speech-detection-cloudrun-api",
        "--image",
        "europe-west3-docker.pkg.dev/lmumlops/hatespeech-detection-docker-repo/inference-api:latest",
        "--region",
        "europe-west3",
        "--platform",
        "managed",
      ]

options:
  logging: CLOUD_LOGGING_ONLY

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/WANDB_API_KEY/versions/latest
      env: "WANDB_API_KEY"

images:
  # - "europe-west3-docker.pkg.dev/$PROJECT_ID/hatespeech-detection-docker-repo/train-model"
  - "europe-west3-docker.pkg.dev/$PROJECT_ID/hatespeech-detection-docker-repo/inference-api"
  - "europe-west3-docker.pkg.dev/$PROJECT_ID/hatespeech-detection-docker-repo/predict-model"
